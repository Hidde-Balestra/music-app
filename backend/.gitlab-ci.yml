# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:

  - trigger-frontend-pipeline       

  - build-backend
  - run-backend-test-suite

  

  # maybe we want to do some integration testing between front & backend here?

  - build-push-docker
  - render-deploy

trigger-frontend-pipeline:
  stage: trigger-frontend-pipeline
  trigger:
    project: se-specialization-2023-1/projects-io/team-x/music-app-frontend

build-backend:
  stage: build-backend
  script:
    - ls
    - mvn clean compile package -e

run-backend-test-suite:
  stage: run-backend-test-suite
  script:
    - mvn test
    - mvn sonar:sonar -e

build-push-docker:
  stage: build-push-docker
  script:
    - docker build . -t dockernage/music-collab-platform-frontend:v1
    - docker push dockernage/music-collab-platform-frontend:v1

render-deploy:
  stage: render-deploy
  script:
    - echo "this is an empty placeholder task"
