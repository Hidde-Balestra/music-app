# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
#  - run-frontend-test-suite
   - build-deploy-docker


build-deploy-docker:
  stage: build-deploy-docker
  script:
    - docker build . -t dockernage/music-collab-platform-frontend:v1
    - docker push dockernage/music-collab-platform-frontend:v1
    - curl https://api.render.com/deploy/srv-cls7b1cm7d1c73f943l0?key=6S9RG0l9wmo

# Running Sonarqube on our front-end times out the pipeline for some reason, so we skip it

#run-frontend-test-suite:       # This job runs in the build stage, which runs first.
#  stage: run-frontend-test-suite
#  script:
#    - npm install sonarqube-scanner
#    - npm run sonar
